연산자와 제어문 연습

[문제 1] 총 지급액 N이 주어지고 지급할 동전의 액면가 M이 주어질 때 총 지급하여야 하는 동전의 수를 출력하는 프로그램을 작성하세요.

  예) 총 지급액 N이 1700이고 지급 동전의 액면가 M이 500 일때 총 지급되어야 하는 동전의 수는 4이다.

#include <stdio.h>

int main() {
	int N = 1700;
	int C = (N % 500) == 0 ? N / 500 : (N / 500) + 1;
	printf("%d", C);
	return 0;
}



[문제 2] 1부터 N까지의 홀수의 합을 for문을 이용하여 출력하는 프로그램을 작성하세요.

#include <stdio.h>

int main() {
	int T = 0;
	int N = 100;
	for (int i = 0; i <= N; i++) {
		if ((i % 2) == 1) {
			T += i;
		}
	}
	printf("1부터 %d까지 홀수의 합 : %d\n", N, T);
	return 0;
}


[문제 3] 1부터 N까지의 짝수의 합을 while문을 이용하여 출력하는 프로그램을 작성하세요.

#include <stdio.h>

int main() {
	int T = 0;
	int N = 100;
	int i = 1;
	while (i <= N) {
		if ((i % 2) == 0) {
			T += i;
		}
		i++;
	}
	printf("1부터 %d까지 홀수의 합 : %d\n", N, T);
	return 0;
}


[문제 4] 2020년부터 3020년 사이의 윤년이 되는 년도를 출력하세요. 윤년의 규칙은 아래와 같다.

  ㅇ 년도를 4로 나누어 나머지가 0이면 윤년
  ㅇ 년도를 100으로 나누어 나머지가 0이면 평년
  ㅇ 년도를 400으로 나누어 나머지가 0이면 윤년

#include <stdio.h>

int main() {
	
	for (int i = 2020; i <= 3020; i++) {
		if ((i % 400) == 0) {
			printf("%d : %s\n", i, "윤년");
		}
		else if ((i % 100) == 0) {
			printf("%d : %s\n", i, "평년");
		}
		else if ((i % 4) == 0) {
			printf("%d : %s\n", i, "윤년");
		}
		else {
			printf("%d : %s\n", i, "평년");
		}
	}

	return 0;
}


[문제 5] N의 값이 소수이면 1, 소수가 아니면 -1을 출력하는 프로그램을 작성하세요.

#include <stdio.h>

int main() {
	int N = 8;
	int R = 1;
	
	if (N > 2) {
		for (int i = 2; i < N; i++) {
			if ((N % i) == 0) {
				R = -1;
				break;
			}
		}
	}
	printf("%d\n", R);
	
	return 0;
}



[문제 6] N이하의 값 중 소수인 값을 출력하는 프로그램을 작성하세요.

  예) N의 값 10이 주어질 때 출력되는 값은 1 2 3 5 7 

#include <stdio.h>

int main() {
	int N = 10;

	for (int i = 1; i <= N; i++) {
		int R = 1;

		if (i > 2) {
			for (int j = 2; j < i; j++) {
				if ((i % j) == 0) {
					R = -1;
					break;
				}
			}
		}
		if (R > 0) {
			printf("%d ", i);
		}
	}
	
	return 0;
}


[문제 7] 학생의 점수 N이 주어질 때 N의 값을 학점으로 변환하는 프로그램을 작성하세요. 점수에 따른 학점은 아래와 같습니다.

  60점 미만 	: F
  60 ~ 69 	: D
  70 ~ 79	: C
  80 ~ 89 	: B
  90 ~ 100	: A

#include <stdio.h>

int main() {
	int N = 99;
	char C = 'F';

	switch (N / 10) {
	case 10:
	case 9:
		C = 'A';
		break;
	case 8:
		C = 'B';
		break;
	case 7:
		C = 'C';
		break;
	case 6:
		C = 'D';
		break;
	default:
		;
		break;
	}
	
	printf("점수 : %d, 학점 : %c\n", N, C);
	
	return 0;
}


[문제 8] 2의 N승을 출력하는 프로그램을 작성하세요.

  예) N이 3일때 출력결과는 8

#include <stdio.h>

int main() {
	int N = 8;
	int R = 1;

	for (int i = 0; i < N; i++) {
		R *= 2;
	}

	printf("2의 %d승 : %d\n", N, R);
	
	return 0;
}
 


[문제 9] N의 1승부터 M승까지 출력하는 프로그램을 작성하세요.

  예) N이 2이고 M이 8일 때 출력결과

    2의 1승 : 2
    2의 2승 : 4
    2의 3승 : 8
    2의 4승 : 16
    2의 5승 : 32
    2의 6승 : 64
    2의 7승 : 128
    2의 8승 : 256

#include <stdio.h>

int main() {
	int N = 2;
	int M = 8;
	
	for (int i = 1; i <= M; i++) {
		int R = 1;
		for (int j = 0; j < i; j++) {
			R *= 2;
		}
		printf("2의 %d승 : %d\n", i, R);
	}
 	
	return 0;
}



[문제 10] 총 지급액 N이 주어질 때 최소 지급 동전의 수를 구하는 프로그램을 작성하세요. 지급할 수 있는 동적의 액면가는 다음과 같습니다.

	500, 100, 50, 10, 5, 1

  예) 총 지급액이 1752 일 경우 500 X 3, 100 X 2, 50 X 1, 1원 X 2 이므로 총 지급 동전의 수는 8

#include <stdio.h>

int main() {
	int N = 1721;
	int C = 0;
	
	C += N / 500;
	N %= 500;
	C += N / 100;
	N %= 100;
	C += N / 50;
	N %= 50;
	C += N / 10;
	N %= 10;
	C += N / 5;
	N %= 5;
	C += N;

	printf("%d", C);
 	
	return 0;
}



[문제 11] 값 N이 주어질 때 N의 자리 수를 출력하는 프로그램을 작성하세요.

  예) 1234 -> 4

#include <stdio.h>

int main() {
	int N = 1721;
	int C = 0;
	
	while (N > 0) {
		C += 1;
		N /= 10;
	}

	printf("%d", C);
 	
	return 0;
}



[문제 12] 짝수자리의 값 N이 주어질 때 선두 절반의 값과 하위 절반의 값을 출력하는 프로그램을 작성하세요.

  예) 1234 -> 선두 : 12  하위 : 34

#include <stdio.h>

int main() {
	int N = 1721;
	int T = N;
	int C = 0;
	
	while (T > 0) {
		C += 1;
		T /= 10;
	}

	int i = 0; 
	int M = 1;
	while (i < (C / 2)) {
		M *= 10;
		i++;
	}

	printf("선두 : %d\n", N / M);
	printf("하위 : %d\n", N % M);
 	
	return 0;
}


[문제 13] N의 값이 주어질 때 1이상 N이하의 값에서 2승의 값이 N을 초과하지 않는 값을 출력하는 프로그램을 작성하세요.

  예) N이 10인 경우 2승의 값이 10 이하인 값은 1, 2, 3 

#include <stdio.h>

int main() {
	int N = 2;
	int M = 10;

	for (int i = 1; i <= M; i++) {
		int R = 1;

		for (int j = 0; j < i; j++) {
			R *= 2;
		}

		if (R <= M) {
			printf("%d ", i);
		}
	}

	return 0;
}

 
[문제 14] 자리 수 N이 주어질 때 다음과 같은 N자리의 값을 생성하는 프로그램을 작성하세요. N의 값은 1이상 18 이하입니다.

  예) 	N의 값이 2인 경우 : 10
	N의 값이 5인 경우 : 10000

#include <stdio.h>

int main() {
	int N = 5;
	int R = 0;

	while (N > 0) {
		if (R == 0) {
			R = 1;
		}
		else {
			R *= 10;		
		}
		N--;
	}

	printf("%d\n", R);

	return 0;
}




[문제 15] N의 값이 주어질 때 각 자리의 값을 출력하는 프로그램을 작성하세요.

  예) 	N의 값이 512 일 경우의 출력
	5
	1
	2

#include <stdio.h>

int main() {
	int N = 512;
	int T = N;
	int C = 0;

	while (T > 0) {
		if (C == 0) {
			C = 1;
		}
		else {
			C *= 10;
		}
		T /= 10;
	}

	while (C > 0) {
		printf("%d\", N / C);
		N %= C;
		C /= 10;
	}

	return 0;
}


[문제 16] 1부터 10까지의 값을 아래의 순서로 출력하는 프로그램을 작성하세요.

	1 10 2 9 3 8 4 7 5 6

#include <stdio.h>

int main() {
	int N = 10;
	for (int i = 1; i <= (N / 2); i++) {
		for (int j = i; j <= i; j++) {
			printf("%d %d ", j, N - j + 1);
		}
	}

	return 0;
}



[문제 17] 당신은 지금 369게임을 진행하고 있습니다. 369게임이란 1부터 1씩 증가하며 값을 말합니다. 이때 말해야 하는 숫자 중에 3, 6, 9 중에 하나라도 포함되어 있다면 숫자를 말하는 대신 숫자에 포함된 3, 6, 9의 개수만큼 손뼉을 쳐야 합니다.
  값 N이 주어지고 1부터 N까지 올바르게 게임을 진행하였을 경우 손뼉을 총 몇 번을 쳤는지 출력하는 프로그램을 작성하세요.

  예) N이 40인 경우 손뼉을 친 수는 22
3	6	9	13	16	19	23	26	29	30	31	32	33	34	35	36	37	38	39
1	1	1	1	1	1	1	1	1	1	1	1	2	1	1	2	1	1	2
1	2	3	4	5	6	7	8	9	10	11	12	14	15	16	18	19	20	22

#include <stdio.h>

int main() {
	int N = 40;
	int C = 0;	
	for (int i = 1; i <= N; i++) {
		int M = i;
		while (M > 0) {
			if ((M % 10) > 0 && (M % 10) % 3 == 0) {
				C++;
			}
			M /= 10;
		}
	}
	printf("%d\n", C);

	return 0;
}


[문제 18] 당신은 여행중에 있으며 A호텔에 장기간 10일간 머무를 예정입니다.
  A호텔의 요금은 3일동안 숙박할 수 있는 기간요금(N)과 당일 하루만 숙박할 수 있는 일일요금(M)이 있습니다. 가장 저렴하게 10일동안 투숙할 수 있는 요금을 구하는 프로그램을 작성하세요.

예) 3일 숙박요금(N)이 3000원이며 1일 숙박요금(M)이 900원이라면
   1일 숙박요금(M) 900원 X 10매 즉 9000원이 가장 저렴하게 숙박할 수 있는 요금이 됩니다.

예) 3일 숙박요금(N)이 3000원이며 1일 숙박요금(M)이 1100원이라면
   3일 숙박요금(N) 3000원 X 3매 + 1일 숙박요금(M) X 1매 즉 10100원이 가장 저렴하게 숙박할 수 있는 요금이 됩니다.
 
#include <stdio.h>

int main() {
	int N = 3000;
	int M = 900;
	int D = 10;
	
	if (N < (M * 3)) {
		printf("%d\n", (N * 3) + (D % 3 * M));
	}
	else {
		printf("%d\n", M * 10);
	}

	return 0;
}


[문제 19] 8개의 수문을 가지는 댐을 제어하는 프로그램을 작성하세요.
 
  8개의 수문은 1Byte로 제어됩니다. 하나의 비트는 하나의 수문의 상태를 나타내며 닫힌 수문은 0, 열려있는 수문은 1로 표현됩니다.

  예를 들어 모든 수문이 닫혀 있을 경우의 비트배열은 아래와 같습니다.
	
	1번	2번	3번	4번	5번	6번	7번	8번
	0	0	0	0	0	0	0	0


[문제 19. 1] 모든 수문의 상태를 출력하는 코드를 작성하세요. 개방된 상태라면 1, 닫힌 상태라면 0을 출력합니다.

[문제 19. 2] N번째 수문을 닫는 코드를 작성하세요.

[문제 19. 3] N번째 수문을 개방하는 코드를 작성하세요.

[문제 19. 4] 닫힌 수문은 개방하고, 개방된 수문은 닫는 코드를 작성하세요.

[문제 19. 5] 모든 수문을 닫는 코드를 작성하세요.

[문제 19. 6] 모든 수문을 개방하는 코드를 작성하세요.

[문제 19. 7] 1번부터 4번까지의 수문을 개방하는 코드를 작성하세요.

[문제 19. 8] 5번부터 8번까지의 수문을 닫는 코드를 작성하세요.


#include <stdio.h>

int main() {
	unsigned char door = 0x00;
	signed char dc = sizeof(door) * 8;
	unsigned char op = 0x80;
	int N = 0;
	
	// 수문의 상태 확인 	
	printf("수문상태 : ");	
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// N번째 수문 개방 		
	N = 3;
	printf("----------------------------------------------\n");
	printf("%d번 수문 개방\n", N);
	printf("----------------------------------------------\n");
	door |= (op >> (N - 1));	
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// N번째 수문 닫기 
	N = 3; 
	printf("----------------------------------------------\n");
	printf("%d번 수문 닫기\n", N);
	printf("----------------------------------------------\n");
	door &= ~(op >> (N - 1));
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// N번째 수문 개방 		
	N = 3;
	printf("----------------------------------------------\n");
	printf("%d번 수문 개방\n", N);
	printf("----------------------------------------------\n");
	door |= (op >> (N - 1));	
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// 닫힌 문은 개방하고 열림 문은 닫기
	door = ~door;	
	printf("----------------------------------------------\n");
	printf("닫힌 문은 개방하고 열린 문은 닫기\n", N);
	printf("----------------------------------------------\n");
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// 모든 수문 개방
	door |= ~0;
	printf("----------------------------------------------\n");
	printf("모든 수문 개방\n", N);
	printf("----------------------------------------------\n");
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// 모든 수문 닫기
	printf("----------------------------------------------\n");
	printf("%d번 수문 닫기\n", N);
	printf("----------------------------------------------\n");
	door &= 0;
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// 1번부터 4번 수문 열기
	N = 1;
	int M = 4;
	printf("----------------------------------------------\n");
	printf("%d번부터 %d번수문 개방\n", N, M);
	printf("----------------------------------------------\n");
	for (int i=N-1 ; i<M ; i++) {
		door |= (op >> i);
	}
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	// 1번부터 4번 수문 닫기
	N = 1;
	M = 4;
	printf("----------------------------------------------\n");
	printf("%d번부터 %d번수문 닫기\n", N, M);
	printf("----------------------------------------------\n");
	for (int i=N-1 ; i<M ; i++) {
		door &= ~(op >> i);
	}
	printf("수문상태 : ");
	for (int i=0 ; i<dc ; i++) {
		printf("%d ", door & (op >> i) ? 1 : 0);
	}
	printf("\n");
	
	return 0;
}